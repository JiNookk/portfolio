/* Global
css에서 변수를 지정해주는 작업 */
:root {
  /* Color */
  --color-white: #ffffff;
  --color-light-white: #eeeeee;
  --color-dark-white: #bdbdbd;
  --color-pink: #fe918d;
  --color-dark-pink: #ff6863;
  --color-black: #4d4d4d;
  --color-dark-grey: #4d4d4d;
  --color-grey: #616161;
  --color-light-grey: #7c7979;
  --color-blue: #73aace;
  --color-yellow: #fff7d1;
  --color-orange: #feb546;
  --color-black: #000000;

  /* Font size */
  --font-large: 48px;
  --font-medium: 28px;
  --font-regular: 18px;
  --font-small: 16px;
  --font-micro: 14px;

  /* Font weight */
  --weight-bold: 700;
  --weight-semi-bold: 600;
  --weight-regular: 400;

  /* Size */
  --size-border-radius: 4px;

  /* Animation */
  --animation-duration: 300ms;
}

/* Universal tags 
    모든 태그들의 박스사이즈를 border로 할것임.*/
* {
  box-sizing: border-box;
}
body {
  /* 바디에 기본적으로 주어진 margin을 없앤다 */
  margin: 0;
  /* 마우스 커서의 리액션을 지정한다 */
  cursor: default;
}

a {
  text-decoration: none;
  color: var(--color-white);
}

ul {
  list-style: none;
  padding-left: 0;
}

/* Typography */
h1 {
  font-size: var(--font-large);
  font-weight: var(--weight-bold);
  color: var(--color-black);
  margin: 16px 0px 0 0;
}

h2 {
  font-size: var (--font-regular);
  font-weight: var(--weight-semi-bold);
  color: var(--color-black);
  margin: 8px 0;
}

h3 {
  font-size: var(--font-regular);
  font-weight: var(--weight-regular);
  color: var(--color-black);
  margin: 8px 0;
}

p {
  font-size: var(--font-regular);
  font-weight: var(--weight-regular);
  color: var(--color-black);
  margin: 4px 0;
}

/* 버튼의 기본속성 없애기 */
button {
  background-color: transparent;
  cursor: pointer;
  border: none;
  outline: none;
}

/* Navbar */
#navbar {
  display: flex;
  justify-content: space-between;
  background-color: var(--color-pink);
  align-items: center;
  color: var(--color-white);
  padding: 16px;
}

.navbar__menu {
  display: flex;
}

.navbar__logo {
  font-size: var(--font-medium);
  font-weight: var(--weight-semi-bold);
}

.navbar__menu__item {
  padding: 8px, 12px;
  margin: 0 4px;
  /* pointer : 호버되었을때 커서가 손모양으로 변함 */
  cursor: pointer;
  border-radius: var(--size-border-radius);
}

.navbar__menu__item.active {
  border: 1px solid var (--color-white);
}

.navbar__menu__item:hover {
  background-color: var(--color-dark-pink);
}

/* Home */
#home {
  /* 홈 섹션의 배경 전체를 설정 */
  /* 배경을 반응형으로 만들기 위해 center/cover/nopeat를 준다. */
  background: url('imgs/homebackground.jpg') center/cover no-repeat;
  padding: 40px;
  /* 아이템이 수직으로 차례대로 깔리니깐 수평으로 중심을 맞추기 위해 align-items을 쓴다.; */
  text-align: center;
}

.home__avatar {
  width: 250px;
  height: 250px;
  border-radius: 50%;
  border: 2px solid var(--color-light-white);
}

.home__title,
.home__description {
  color: var(--color-white);
}

.home__contact {
  color: var(--color-white);
  font-size: var(--font-regular);
  font-weight: var(--weight-bold);
  margin: 24px;
  padding: 8px 12px;
  border: 2px solid var(--color-white);
  border-radius: var(--size-border-radius);
}

/* Section common  */
.section {
  padding: 50px;
  text-align: center;

  /* text-align으로 가운데 정렬이 안될 경우를 대비해 margin을 양옆에 동일하게 분배 */
  margin: auto;
}

.section__container {
  /* 최대로 커질 수 있는 너비 
  이렇게 따로 빼서 써야 배경색 지정시 문제가 발생하지 않는다.*/
  max-width: 1200px;
  margin: auto;
}

/* About */
.about__majors {
  /* 플렉스 박스는 기본적으로 수평정렬 */
  display: flex;
  /* 등간격의 기본축 정렬을 하고 싶을때 */
  justify-content: space-between;
  margin: 80px, 0;
}

.major__icon {
  width: 170px;
  height: 170px;
  /* line-height을 높이만큼 주게되면 요소가 중간에 오게 된다.; */
  line-height: 170px;
  /* 만들면서 확인하기 어렵기 때문에 색지정해서 영역확인하면 좋다! */
  /* background-color: yellow; */
  font-size: 70px;
  /* 개발자도구를 이용해서 마우스를 대보면 margin이 분홍색으로 표시된다!
  치우쳐진 마진을 발견하면 margin : auto를  쓸것 */
  margin: auto;
  color: var(--color-blue);
  border: 1px solid var(--color-blue);
  border-radius: 50%;
  margin-bottom: 16px;
}

.major__title,
.major__description {
  color: var(--color-dark-grey);
}

.major__description {
  font-size: var(--font-small);
}

/* 마우스를 가져다 댈때 동작을 원한다면 hover */
/* major icon이 아닌 i개체(아이콘)에 올라갔을 때 반응을 원하면 i도 추가
    이렇게하면 안의 회전, 확대도 아이콘에서만 발생 */
.major__icon:hover i {
  color: var(--color-pink);
  /* 가져다 댈때 회전과 확대가 발생 */
  transform: rotate(-30deg) scale(1.2);
}

.major__icon i {
  /* 애니메이션은 300ms가 딱이야! 아니면 너무 빠르거나 답답 */
  transition: all var(--animation-duration) ease;
}

.about__jobs {
  margin: 80px 0;
}
/* 원래 div태그의 기본값 : 수직
flex : 수평
>> 이 두개를 잘 조합해서 우리가 원하는것을 버무려야 한다. */
.job {
  display: flex;
  align-items: center;
}

.job__description {
  margin: 0 16px;
  text-align: left;
}

.job__name {
  font-size: var(--font-small);
}

.job__period {
  font-size: var(--font-micro);
}

#skills {
  background-color: var(--color-yellow);
}

/* 개발자 도구를 들어가 보면 사이즈가 작아서 옆으로 안퍼지는지 
마진때문에 옆으로 안퍼지는지 확인할 수 있다. 마진 : 분홍, 사이즈 : 파랑 */
.skillset {
  display: flex;
  background-color: var(--color-light-grey);
  color: var(--color-light-white);
  /* 밸류값줄때 절대 ,넣지말것!!!! */
  margin: 20px 0;
}

/* 사이즈가 남은 요소들의 위치를 퍼뜨리기 위한 코드 */
.skillset__left {
  flex-basis: 60%;
  background-color: var(--color-dark-grey);
  /* 박스 내부 개체들의 간격을 띄울때 : padding
  박스의 간격을 띄울 때 : margin */
  padding: 20px 40px;
}

.skillset__right {
  flex-basis: 40%;
}

.tools {
  background-color: var(--color-grey);
}

.skillset__title {
  color: var(--color-light-white);
}

.skill__description {
  display: flex;
  justify-content: space-between;
}

.skill__bar {
  width: 100%;
  height: 3px;
  background-color: var(--color-grey);
}

.skill {
  margin-bottom: 32px;
}

.skill__value {
  /* 요놈은 html태그안에서 각각 정의되야 한다. 
  나중에는 JS로 동적처리할 것임. */
  /* width: 70%; */
  height: 3px;
  background-color: var(--color-orange);
}

.tools,
.etc {
  padding: 20px;
}
